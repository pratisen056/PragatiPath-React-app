{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\pragatipath\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css'; // Make sure Tailwind CSS is imported\n\n// Import your components\nimport LandingPage from './components/Landing/LandingPage';\nimport OnboardingQuest from './components/onboarding/OnboardingQuest';\nimport Dashboard from './components/dashboard/Dashboard'; // NEW IMPORT\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // App-level state to track which page to show\n  const [currentPage, setCurrentPage] = useState('landing'); // 'landing', 'onboarding', 'dashboard'\n  const [userProfile, setUserProfile] = useState(null); // Store user data\n\n  // Navigation functions\n  const navigateToOnboarding = () => {\n    setCurrentPage('onboarding');\n    console.log('Navigating to onboarding...');\n  };\n  const navigateToDashboard = profileData => {\n    setUserProfile(profileData);\n    setCurrentPage('dashboard');\n    console.log('Navigating to dashboard with profile:', profileData);\n  };\n  const navigateToLanding = () => {\n    setCurrentPage('landing');\n    setUserProfile(null);\n  };\n\n  // Render different pages based on currentPage state\n  const renderCurrentPage = () => {\n    switch (currentPage) {\n      case 'landing':\n        return /*#__PURE__*/_jsxDEV(LandingPage, {\n          onGetStarted: navigateToOnboarding\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 16\n        }, this);\n      case 'onboarding':\n        return /*#__PURE__*/_jsxDEV(OnboardingQuest, {\n          onComplete: navigateToDashboard,\n          onBack: navigateToLanding\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this);\n      case 'dashboard':\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          userProfile: userProfile,\n          onNavigate: page => setCurrentPage(page)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(LandingPage, {\n          onGetStarted: navigateToOnboarding\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: renderCurrentPage()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rsgAP5kd7utKu6pGfcCo1rIHIkU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","LandingPage","OnboardingQuest","Dashboard","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","userProfile","setUserProfile","navigateToOnboarding","console","log","navigateToDashboard","profileData","navigateToLanding","renderCurrentPage","onGetStarted","fileName","_jsxFileName","lineNumber","columnNumber","onComplete","onBack","onNavigate","page","className","children","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/pragatipath/src/app.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './index.css'; // Make sure Tailwind CSS is imported\r\n\r\n// Import your components\r\nimport LandingPage from './components/Landing/LandingPage';\r\nimport OnboardingQuest from './components/onboarding/OnboardingQuest';\r\nimport Dashboard from './components/dashboard/Dashboard'; // NEW IMPORT\r\n\r\nfunction App() {\r\n  // App-level state to track which page to show\r\n  const [currentPage, setCurrentPage] = useState('landing'); // 'landing', 'onboarding', 'dashboard'\r\n  const [userProfile, setUserProfile] = useState(null); // Store user data\r\n\r\n  // Navigation functions\r\n  const navigateToOnboarding = () => {\r\n    setCurrentPage('onboarding');\r\n    console.log('Navigating to onboarding...');\r\n  };\r\n\r\n  const navigateToDashboard = (profileData) => {\r\n    setUserProfile(profileData);\r\n    setCurrentPage('dashboard');\r\n    console.log('Navigating to dashboard with profile:', profileData);\r\n  };\r\n\r\n  const navigateToLanding = () => {\r\n    setCurrentPage('landing');\r\n    setUserProfile(null);\r\n  };\r\n\r\n  // Render different pages based on currentPage state\r\n  const renderCurrentPage = () => {\r\n    switch (currentPage) {\r\n      case 'landing':\r\n        return <LandingPage onGetStarted={navigateToOnboarding} />;\r\n      \r\n      case 'onboarding':\r\n        return (\r\n          <OnboardingQuest \r\n            onComplete={navigateToDashboard} \r\n            onBack={navigateToLanding} \r\n          />\r\n        );\r\n      \r\n      case 'dashboard':\r\n        return (\r\n          <Dashboard \r\n            userProfile={userProfile}\r\n            onNavigate={(page) => setCurrentPage(page)}\r\n          />\r\n        );\r\n      \r\n      default:\r\n        return <LandingPage onGetStarted={navigateToOnboarding} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {renderCurrentPage()}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,aAAa,CAAC,CAAC;;AAEtB;AACA,OAAOC,WAAW,MAAM,kCAAkC;AAC1D,OAAOC,eAAe,MAAM,yCAAyC;AACrE,OAAOC,SAAS,MAAM,kCAAkC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEtD;EACA,MAAMY,oBAAoB,GAAGA,CAAA,KAAM;IACjCH,cAAc,CAAC,YAAY,CAAC;IAC5BI,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;EAC5C,CAAC;EAED,MAAMC,mBAAmB,GAAIC,WAAW,IAAK;IAC3CL,cAAc,CAACK,WAAW,CAAC;IAC3BP,cAAc,CAAC,WAAW,CAAC;IAC3BI,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEE,WAAW,CAAC;EACnE,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9BR,cAAc,CAAC,SAAS,CAAC;IACzBE,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,QAAQV,WAAW;MACjB,KAAK,SAAS;QACZ,oBAAOH,OAAA,CAACJ,WAAW;UAACkB,YAAY,EAAEP;QAAqB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAE5D,KAAK,YAAY;QACf,oBACElB,OAAA,CAACH,eAAe;UACdsB,UAAU,EAAET,mBAAoB;UAChCU,MAAM,EAAER;QAAkB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC;MAGN,KAAK,WAAW;QACd,oBACElB,OAAA,CAACF,SAAS;UACRO,WAAW,EAAEA,WAAY;UACzBgB,UAAU,EAAGC,IAAI,IAAKlB,cAAc,CAACkB,IAAI;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC;MAGN;QACE,oBAAOlB,OAAA,CAACJ,WAAW;UAACkB,YAAY,EAAEP;QAAqB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IAC9D;EACF,CAAC;EAED,oBACElB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBX,iBAAiB,CAAC;EAAC;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEV;AAAChB,EAAA,CAtDQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}