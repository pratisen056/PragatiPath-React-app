{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\pragatipath\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './index.css'; // Make sure Tailwind CSS is imported\n\n// Import your components\nimport LandingPage from './components/Landing/LandingPage';\nimport OnboardingQuest from './components/onboarding/OnboardingQuest';\nimport Dashboard from './components/dashboard/Dashboard';\nimport SmartRecommendationEngine from './components/recommendations/SmartRecommendationEngine';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State to track current page - added 'recommendations' option\n  const [currentPage, setCurrentPage] = useState('landing');\n\n  // State to store user profile data\n  const [userProfile, setUserProfile] = useState(null);\n\n  // State to store selected internship (for application flow)\n  const [selectedInternship, setSelectedInternship] = useState(null);\n\n  // Navigation Functions\n\n  // Navigate from Landing to Onboarding\n  const navigateToOnboarding = () => {\n    setCurrentPage('onboarding');\n    console.log('Navigating to onboarding...');\n  };\n\n  // Navigate from Onboarding to Dashboard (with profile data)\n  const navigateToDashboard = profileData => {\n    setUserProfile(profileData);\n    setCurrentPage('dashboard');\n    console.log('Navigating to dashboard with profile:', profileData);\n  };\n\n  // Navigate to Landing page (reset everything)\n  const navigateToLanding = () => {\n    setCurrentPage('landing');\n    setUserProfile(null);\n    setSelectedInternship(null);\n  };\n\n  // Navigate to Recommendations from Dashboard\n  const navigateToRecommendations = () => {\n    setCurrentPage('recommendations');\n    console.log('Navigating to recommendations...');\n  };\n\n  // Handle internship selection from recommendations\n  const handleInternshipSelect = internship => {\n    setSelectedInternship(internship);\n    console.log('Selected internship:', internship);\n\n    // You can navigate to application form or internship details here\n    // For now, let's just show an alert and stay on recommendations\n    alert(`Selected: ${internship.title} at ${internship.organization}`);\n\n    // Future: Navigate to application form\n    // setCurrentPage('application');\n  };\n\n  // Generic navigation function (for Dashboard and other components)\n  const handleNavigation = (page, data = null) => {\n    switch (page) {\n      case 'landing':\n        navigateToLanding();\n        break;\n      case 'onboarding':\n        navigateToOnboarding();\n        break;\n      case 'dashboard':\n        if (data) {\n          navigateToDashboard(data);\n        } else {\n          setCurrentPage('dashboard');\n        }\n        break;\n      case 'recommendations':\n        navigateToRecommendations();\n        break;\n      default:\n        console.warn(`Unknown navigation target: ${page}`);\n    }\n  };\n\n  // Render the appropriate page based on currentPage state\n  const renderCurrentPage = () => {\n    switch (currentPage) {\n      case 'landing':\n        return /*#__PURE__*/_jsxDEV(LandingPage, {\n          onGetStarted: navigateToOnboarding // Pass the navigation function\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this);\n      case 'onboarding':\n        return /*#__PURE__*/_jsxDEV(OnboardingQuest, {\n          onComplete: navigateToDashboard // Navigate to dashboard with profile\n          ,\n          onBack: navigateToLanding // Go back to landing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this);\n      case 'dashboard':\n        return /*#__PURE__*/_jsxDEV(Dashboard, {\n          userProfile: userProfile // Pass user profile data\n          ,\n          onNavigate: handleNavigation // Pass navigation function\n          ,\n          onFindInternships: navigateToRecommendations // Direct route to recommendations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this);\n      case 'recommendations':\n        return /*#__PURE__*/_jsxDEV(SmartRecommendationEngine, {\n          userProfile: userProfile // Pass user profile for personalization\n          ,\n          onInternshipSelect: handleInternshipSelect // Handle internship selection\n          ,\n          onBack: () => setCurrentPage('dashboard') // Go back to dashboard\n          ,\n          onNavigate: handleNavigation // Pass navigation function\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this);\n      default:\n        // Fallback to landing page\n        console.warn(`Unknown page: ${currentPage}, falling back to landing`);\n        return /*#__PURE__*/_jsxDEV(LandingPage, {\n          onGetStarted: navigateToOnboarding\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this);\n    }\n  };\n\n  // Debug info (remove in production)\n  const debugInfo = process.env.NODE_ENV === 'development' ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-4 right-4 bg-black bg-opacity-50 text-white p-2 rounded text-xs z-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Page: \", currentPage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"User: \", userProfile ? userProfile.name || 'Set' : 'None']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Internship: \", selectedInternship ? 'Selected' : 'None']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App min-h-screen bg-gray-900\",\n    children: [renderCurrentPage(), debugInfo]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"zZXXi2gns1B+87Gp9mSHiSoDzO8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","LandingPage","OnboardingQuest","Dashboard","SmartRecommendationEngine","jsxDEV","_jsxDEV","App","_s","currentPage","setCurrentPage","userProfile","setUserProfile","selectedInternship","setSelectedInternship","navigateToOnboarding","console","log","navigateToDashboard","profileData","navigateToLanding","navigateToRecommendations","handleInternshipSelect","internship","alert","title","organization","handleNavigation","page","data","warn","renderCurrentPage","onGetStarted","fileName","_jsxFileName","lineNumber","columnNumber","onComplete","onBack","onNavigate","onFindInternships","onInternshipSelect","debugInfo","process","env","NODE_ENV","className","children","name","_c","$RefreshReg$"],"sources":["C:/Users/Administrator/Desktop/pragatipath/src/app.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './index.css'; // Make sure Tailwind CSS is imported\r\n\r\n// Import your components\r\nimport LandingPage from './components/Landing/LandingPage';\r\nimport OnboardingQuest from './components/onboarding/OnboardingQuest';\r\nimport Dashboard from './components/dashboard/Dashboard';\r\nimport SmartRecommendationEngine from './components/recommendations/SmartRecommendationEngine';\r\n\r\nfunction App() {\r\n  // State to track current page - added 'recommendations' option\r\n  const [currentPage, setCurrentPage] = useState('landing');\r\n  \r\n  // State to store user profile data\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  \r\n  // State to store selected internship (for application flow)\r\n  const [selectedInternship, setSelectedInternship] = useState(null);\r\n\r\n  // Navigation Functions\r\n  \r\n  // Navigate from Landing to Onboarding\r\n  const navigateToOnboarding = () => {\r\n    setCurrentPage('onboarding');\r\n    console.log('Navigating to onboarding...');\r\n  };\r\n\r\n  // Navigate from Onboarding to Dashboard (with profile data)\r\n  const navigateToDashboard = (profileData) => {\r\n    setUserProfile(profileData);\r\n    setCurrentPage('dashboard');\r\n    console.log('Navigating to dashboard with profile:', profileData);\r\n  };\r\n\r\n  // Navigate to Landing page (reset everything)\r\n  const navigateToLanding = () => {\r\n    setCurrentPage('landing');\r\n    setUserProfile(null);\r\n    setSelectedInternship(null);\r\n  };\r\n\r\n  // Navigate to Recommendations from Dashboard\r\n  const navigateToRecommendations = () => {\r\n    setCurrentPage('recommendations');\r\n    console.log('Navigating to recommendations...');\r\n  };\r\n\r\n  // Handle internship selection from recommendations\r\n  const handleInternshipSelect = (internship) => {\r\n    setSelectedInternship(internship);\r\n    console.log('Selected internship:', internship);\r\n    \r\n    // You can navigate to application form or internship details here\r\n    // For now, let's just show an alert and stay on recommendations\r\n    alert(`Selected: ${internship.title} at ${internship.organization}`);\r\n    \r\n    // Future: Navigate to application form\r\n    // setCurrentPage('application');\r\n  };\r\n\r\n  // Generic navigation function (for Dashboard and other components)\r\n  const handleNavigation = (page, data = null) => {\r\n    switch (page) {\r\n      case 'landing':\r\n        navigateToLanding();\r\n        break;\r\n      case 'onboarding':\r\n        navigateToOnboarding();\r\n        break;\r\n      case 'dashboard':\r\n        if (data) {\r\n          navigateToDashboard(data);\r\n        } else {\r\n          setCurrentPage('dashboard');\r\n        }\r\n        break;\r\n      case 'recommendations':\r\n        navigateToRecommendations();\r\n        break;\r\n      default:\r\n        console.warn(`Unknown navigation target: ${page}`);\r\n    }\r\n  };\r\n\r\n  // Render the appropriate page based on currentPage state\r\n  const renderCurrentPage = () => {\r\n    switch (currentPage) {\r\n      case 'landing':\r\n        return (\r\n          <LandingPage \r\n            onGetStarted={navigateToOnboarding} // Pass the navigation function\r\n          />\r\n        );\r\n\r\n      case 'onboarding':\r\n        return (\r\n          <OnboardingQuest \r\n            onComplete={navigateToDashboard}  // Navigate to dashboard with profile\r\n            onBack={navigateToLanding}        // Go back to landing\r\n          />\r\n        );\r\n\r\n      case 'dashboard':\r\n        return (\r\n          <Dashboard \r\n            userProfile={userProfile}           // Pass user profile data\r\n            onNavigate={handleNavigation}       // Pass navigation function\r\n            onFindInternships={navigateToRecommendations} // Direct route to recommendations\r\n          />\r\n        );\r\n\r\n      case 'recommendations':\r\n        return (\r\n          <SmartRecommendationEngine \r\n            userProfile={userProfile}          // Pass user profile for personalization\r\n            onInternshipSelect={handleInternshipSelect} // Handle internship selection\r\n            onBack={() => setCurrentPage('dashboard')}  // Go back to dashboard\r\n            onNavigate={handleNavigation}       // Pass navigation function\r\n          />\r\n        );\r\n\r\n      default:\r\n        // Fallback to landing page\r\n        console.warn(`Unknown page: ${currentPage}, falling back to landing`);\r\n        return (\r\n          <LandingPage \r\n            onGetStarted={navigateToOnboarding}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  // Debug info (remove in production)\r\n  const debugInfo = process.env.NODE_ENV === 'development' ? (\r\n    <div className=\"fixed bottom-4 right-4 bg-black bg-opacity-50 text-white p-2 rounded text-xs z-50\">\r\n      <div>Page: {currentPage}</div>\r\n      <div>User: {userProfile ? userProfile.name || 'Set' : 'None'}</div>\r\n      <div>Internship: {selectedInternship ? 'Selected' : 'None'}</div>\r\n    </div>\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"App min-h-screen bg-gray-900\">\r\n      {renderCurrentPage()}\r\n      {debugInfo}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}